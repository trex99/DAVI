# -*- coding: utf-8 -*-
"""[문제]중간고사_미완성_문제해결_프로그램_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SuuC7V0Bh2tWTURj01-VqxQl7JjOheYH

# 👍 중간고사 - 미완성 문제해결 프로그램

## [시험문제]
- 주석의 안내에 따라 미완성 프로그램을 완성하고, 중간고사 시험문제 11번 ~ 15번까지의 질문에 답하세요.

## [문제상황 - 해결할 문제 정의]

- 경상남도 김해시는 친환경 도시를 슬로건으로 전기 자전거 스테이션을 설치하였다.
- 금년에 김해시 사업계획에 따라 전기 자전거 활성화를 위하여 위치정보 조회 서비스를 홈페이지에 게시하기로 하였다.
- 자전거 보관소 데이터 조회 후 지도에 위치를 표시하는 핵심 서비스 프로그램을 완성하세요.

- 공공데이터 포털 : https://www.data.go.kr/

- 공공데이터포털의 데이터명 : 경상남도 김해시_전기자전거 스테이션 위치정보

### Open API 이용 데이터 수집
"""

# Open API 통신 실패로 데이터를 받아오지 못하는 경우 대신할 데이터
open_api_data = '''
{"status":"999","message":"정상 처리 되었습니다.","data":[{"mgtNo":"STATION_001","name":"봉황역","xCoordinate":"128.8736411","yCoordinate":"35.2277057","addr":"경상남도 김해시 외동 1264"},{"mgtNo":"STATION_002","name":"수로왕릉역","xCoordinate":"128.872086162507","yCoordinate":"35.2329938518363","addr":"김해시 외동 1297"},{"mgtNo":"STATION_003","name":"수로왕릉","xCoordinate":"128.8789361","yCoordinate":"35.2334009","addr":"김해시 서상동 335-1"},{"mgtNo":"STATION_004","name":"대성동고분박물관","xCoordinate":"128.8728810","yCoordinate":"35.2348520","addr":"김해시 봉황동 453-1"},{"mgtNo":"STATION_005","name":"박물관역","xCoordinate":"128.8718979","yCoordinate":"35.2400377","addr":"김해시 내동 1147"},{"mgtNo":"STATION_006","name":"수로왕비릉","xCoordinate":"128.877676954359","yCoordinate":"35.2425291957211","addr":"김해시 구산동 93-1"},{"mgtNo":"STATION_007","name":"국립김해박물관","xCoordinate":"128.872223171877","yCoordinate":"35.2437152642491","addr":"김해시 구산동 1032"},{"mgtNo":"STATION_008","name":"연지공원역","xCoordinate":"128.8696941","yCoordinate":"35.2493142","addr":"김해시 구산동 1072-16"},{"mgtNo":"STATION_009","name":"연지공원","xCoordinate":"128.8697906","yCoordinate":"35.2447422","addr":"김해시 내동 1068"},{"mgtNo":"STATION_010","name":"거북공원","xCoordinate":"128.8656057","yCoordinate":"35.2370078","addr":"김해시 내동 1116-2"},{"mgtNo":"STATION_011","name":"공주공원","xCoordinate":"128.8684638","yCoordinate":"35.2345124","addr":"김해시 내동 1146-7"}]}
'''

# 공공데이터포털의 Open API를 이용한 데이터 수집
import ?  # 문제 1-1 : 아래 코드를 수정하지 않고 정상 구동 되도록 "?" 에 알맞는 패키지명을 작성하세요.

url = 'https://smartcity.gimhae.go.kr/smart_tour/dashboard/api/publicData/location/bicycleStation'

# Open API 통신 실패시 처리를 위한 try ~ exept 블록 처리
try:
    response = requests.get(url, verify=False, stream=True, timeout=5)
    data = response.content.decode('utf-8')  # 데이터를 받았으면 문자셋을 utf-8로 변형
except:
    data = open_api_data # 통신에 실패했다면 이미 준비한 데이터를 이용하도록 처리

# 데이터 수집결과 출력
print(type(data), data)

# 수집결과 데이터 처리 : string자료형으로 dict자료형으로 변환
import json

after_data = json.?(data) # 문제 1-2 : string 자료형인 data 값을 dict 자료형으로 변환하는 코드를 작성하세요.
after_data

# dict 자료형으로 변환되었는지 확인
type(after_data)

# 필수 데이터인 각 지역별 정보만 추출
x_data = after_data['data']
x_data

# 각 지역정보를 pandas 데이터프레임으로 변환
import pandas as pd

real_data = pd.?(x_data) # 문제 1-3 : dict 자료형인 x_data 값을 pandas 데이터프레임 객체로 변환하는 코드를 작성하세요.
real_data

"""- 각 컬럼이 의미하는 내용
    - mgtNo : 스테이션 관리 번호
    - name : 스테이션 이름
    - xCoordinate : 경도 (왼쪽 또는 오른쪽에서 떨어진 거리)
    - yCoordinate : 위도 (남쪽 또는 북쪽에서 떨어진 거리)
    - addr : 주소
"""

# 각 컬럼의 컬럼명, 자료형, 결측치, 메모리 사용량 등 확인
real_data.info()

# xCoordinate, yCoordinate 자료형 변경
# 문제 1-4 : real_data 데이터프레임의 xCoordinate, yCoordinate 컬럼의 자료형을 float로 변환하는 코드를 작성하세요.
real_data['xCoordinate'] = real_data['xCoordinate'].?('float')
real_data['yCoordinate'] = real_data['yCoordinate'].?('float')

# 각 컬럼의 컬럼명, 자료형, 결측치, 메모리 사용량 등 확인
real_data.info()

# 불필요한 컬럼으로 생각되는 mgtNo 컬럼을 제거
real_data = real_data.drop(?) # 문제 1-5 : real_data 데이터프레임의 mgtNo 컬럼을 제거하는 코드를 완성하세요.
real_data.head()

# 각 컬럼별 결측치 갯수 확인
real_data.isnull().sum()

# 수치형 데이터에 대한 갯수, 평균, 표준편차, 최소, 최대, 사분위 값등 기초통계량 확인
# 문제 1-6 : real_data 데이터프레임의 xCoordinate 의 평균은 얼마인가요 ?
real_data.describe()

# folium 패키지를 이용하여 "봉황역" 스테이션의 위도, 경도를 지도에 마커로 표시
import ? # 문제 1-7 : 아래 코드를 수정하지 않고 정상 구동 되도록 "?" 에 알맞는 패키지명을 작성하세요.

map_figure = folium.Figure(width=700, height=350) # map 크기 변경
map_ = folium.Map(location=[35.2277057, 128.8736411], zoom_start=17).add_to(map_figure) # 봉황역 스테이션 위도, 경도를 중심으로 지도 구성

popup = folium.Popup('봉황역', min_width=200, max_width=200) # 봉황역 마커 클릭시 출력할 팝업 메세지 준비
folium.Marker([35.2277057, 128.8736411], popup=popup, tooltip='경상남도 김해시 외동 1264').add_to(map_) # 봉황역 마커 출력
map_  # map 출력

# folium 패키지를 이용하여 모든 스테이션을 지도에 마커로 출력
import folium

map_figure = folium.Figure(width=700, height=350) # map 크기 변경
map_ = folium.Map(location=[35.2277057, 128.8736411], zoom_start=14).add_to(map_figure) # 봉황역 스테이션 위도, 경도를 중심으로 지도 구성

# 문제 1-8 : real_data 데이터프레임 각각의 Row 값을 읽기 위하여 iterrows() 함수를 사용하는 코드를 완성하세요.
for row_index, ? in real_data.iterrows():
    popup = folium.Popup(row['name'], min_width=200, max_width=200) # 마커 클릭시 출력할 팝업 메세지 준비
    folium.Marker([row.yCoordinate, row.xCoordinate], popup=popup, tooltip=row.addr).add_to(map_) # 마커 출력
map_  # map 출력

# folium 패키지를 이용하여 모든 스테이션을 지도에 마커로 출력
# 단, 모든 좌표를 대상을 중심 좌표를 구하여 모든 마커가 보이도록 처리
import folium

# 중심 좌표를 각 좌표의 평균으로 한다.

# 문제 1-9 : xCoordinate 평균 값을 중심 좌표로 사용하려고 합니다. 알맞은 함수를 완성하세요.
x_center = real_data.xCoordinate.astype(float).?()
# 문제 1-10 : yCoordinate 평균 값을 중심 좌표로 사용하려고 합니다. 알맞은 함수를 완성하세요.
y_center = real_data.yCoordinate.astype(float).?()

map_figure = folium.Figure(width=700, height=350) # map 크기 변경
map_ = folium.Map(location=[y_center, x_center], zoom_start=13).add_to(map_figure) # 모든 좌표의 중심좌표(평균좌표)의 위도, 경도를 중심으로 지도 구성

for row_index, row in real_data.iterrows():
    popup = folium.Popup(row['name'], min_width=200, max_width=200) # 마커 클릭시 출력할 팝업 메세지 준비
    folium.Marker([row.yCoordinate, row.xCoordinate], popup=popup, tooltip=row.addr).add_to(map_) # 마커 출력
map_  # map 출력

"""- End Of Program"""